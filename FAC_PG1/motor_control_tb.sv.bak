`timescale 1ns/1ps

module motor_control_tb;

    // Testbench variables
    logic clk;
    logic [3:0] hex_speed;
    logic pwm;

    // Instantiate the motor_control module
    motor_control uut (
        .clk(clk),
        .hex_speed(hex_speed),
        .pwm(pwm)
    );

    // Clock generation
    initial begin
        clk = 0;
        forever #10 clk = ~clk; // Generate a clock with a period of 20ns (50MHz)
    end

    // Test sequence
    initial begin
        // Initialize inputs
        hex_speed = 4'h0; // Start with the motor stopped
        #100; // Wait for a while to observe the PWM output

        // Test different speed values
        hex_speed = 4'h1; // Minimum speed
        #100; // Wait to observe the PWM output

        hex_speed = 4'h8; // Medium speed
        #100; // Wait to observe the PWM output

        hex_speed = 4'hF; // Maximum speed
        #100; // Wait to observe the PWM output

        // Finish the simulation
        $finish;
    end

    // Optional: Monitor changes in the PWM output
    initial begin
        $monitor("Time: %t, hex_speed: %h, PWM: %b", $time, hex_speed, pwm);
    end

endmodule